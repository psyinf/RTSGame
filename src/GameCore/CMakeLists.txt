find_package(RENDERCORE REQUIRED)
find_package(SDK REQUIRED)
INCLUDE_DIRECTORIES(${GMTL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${COMMON_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OSG_INCLUDE_DIR}/)
INCLUDE_DIRECTORIES(${SDK_INCLUDE_DIR}/common)
INCLUDE_DIRECTORIES(${GEOGRAPHICLIB_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${RENDERCOMMON_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${RENDERCORE_INCLUDE_DIR})

LINK_DIRECTORIES(${RENDER_LIBRARY})
LINK_DIRECTORIES(${BOOST_LIBRARY})
LINK_DIRECTORIES(${GEOGRAPHICLIB_LIBRARY})

SET(DBINFO_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/"  CACHE INTERNAL "db info include directory")
add_definitions( "/wd4503" )

FILE(GLOB header_files "${CMAKE_CURRENT_SOURCE_DIR}/*.h")
FILE(GLOB cpp_files "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp")
FILE(GLOB util_header_files "${CMAKE_CURRENT_SOURCE_DIR}/Util/*.h")
FILE(GLOB util_cpp_files "${CMAKE_CURRENT_SOURCE_DIR}/Util/*.cpp")

 
ADD_LIBRARY(GameCore STATIC 
		${header_files} 
		${cpp_files}
		${util_header_files} 
		${util_cpp_files}
)
TARGET_LINK_LIBRARIES(GameCore)

INSTALL(FILES ${header_files} DESTINATION include/Core/)
INSTALL(TARGETS GameCore
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

 
